import Head from "next/head";
import { Inter, Island_Moments } from "next/font/google";
import axios from "axios";
const inter = Inter({ subsets: ["latin"] });
import { useEffect, useState } from "react";
import {
  Container,
  Stack,
  Input,
  Button,
  SimpleGrid,
  Flex,
  Box,
  Modal,
  ModalOverlay,
  ModalHeader,
  ModalBody,
  ModalContent,
  ModalCloseButton,
  useDisclosure,
} from "@chakra-ui/react";
import React from "react";
import { PokemonCard, PokemonData } from "@/components";
import { Pokemon } from "@/models";
import { Header } from "@/ui/header";

export default function Home() {
  const pokemonDataModal = useDisclosure();

  const [isLoading, setIsLoading] = useState(false);
  const [pokemons, setPokemons] = React.useState<Pokemon[]>([]);
  const [selectedPokemon, setSelectedPokemon] = React.useState<Pokemon>();
  const [currentPage, setCurrentPage] = useState(
    "https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0"
  );

  useEffect(() => {
    setIsLoading(true);
    async function getPokemon() {
      try {
        const res = await axios.get(currentPage);
        if (res.data?.results!.length === 0) {
          console.error("No hay datos");
        } else {
          const promises = res.data?.results.map((result) => axios(result.url));
          const fetchedPokemon = (await Promise.all(promises)).map(
            (res) => res.data
          );

          setPokemons((prev) => [...prev, ...fetchedPokemon]);
          setIsLoading(false);
        }
      } catch (error) {
        console.error(error);
      }
    }
    getPokemon();
  }, [currentPage]);

  function handleNextPage() {}

  function handleViewPokemon(pokemon) {
    setSelectedPokemon(pokemon);
    pokemonDataModal.onOpen();
  }
  console.log(pokemons);
  return (
    <>
      <Head>
        <title>Pokemon Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Flex
        alignItems="center"
        minH="100vh"
        justifyContent="center"
        marginRight={{ sm: "0px", md: "200px" }}
      >
        <Container>
          <Stack p="5" alignItems="center" spacing="4">
            <SimpleGrid
              spacingX={{ md: "440px" }}
              spacingY="20px"
              columns={{ base: 1, sm: 1, md: 3 }}
              justifyContent={"space-between"}
            >
              {pokemons.map((pokemon: Pokemon) => (
                <Box
                  as="button"
                  key={pokemon.id}
                  onClick={() => handleViewPokemon(pokemon)}
                >
                  <PokemonCard {...pokemon} />
                </Box>
              ))}
            </SimpleGrid>

            <Button isLoading={false} onClick={handleNextPage}>
              Cargas m√°s
            </Button>
          </Stack>
        </Container>
      </Flex>
      <Modal {...pokemonDataModal} isCentered>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader textTransform="capitalize">
            {selectedPokemon && selectedPokemon.name}
          </ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            {selectedPokemon && <PokemonData pokemon={selectedPokemon} />}
          </ModalBody>
        </ModalContent>
      </Modal>
    </>
  );
}
